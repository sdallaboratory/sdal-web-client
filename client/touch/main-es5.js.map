{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/about-modal/about-modal.component.html","webpack:///src/app/components/about-modal/about-modal.component.ts","webpack:///src/app/components/app/app.component.html","webpack:///src/app/components/app/app.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/lesson-details/lesson-details.component.html","webpack:///src/app/components/lesson-details/lesson-details.component.ts","webpack:///src/app/components/recommendations/recommendations.component.html","webpack:///src/app/components/recommendations/recommendations.component.ts","webpack:///src/app/components/schedule-day/schedule-day.component.html","webpack:///src/app/components/schedule-day/schedule-day.component.ts","webpack:///src/app/components/schedule-table/schedule-table.component.html","webpack:///src/app/components/schedule-table/schedule-table.component.ts","webpack:///src/app/components/search/search.component.html","webpack:///src/app/components/search/search.component.ts","webpack:///src/app/components/targets/targets.component.html","webpack:///src/app/components/targets/targets.component.ts","webpack:///src/app/interceptors/api-interceptor.service.ts","webpack:///src/app/material-imports/material-imports.module.ts","webpack:///src/app/pipes/in-storage.pipe.ts","webpack:///src/app/pipes/lesson-number.pipe.ts","webpack:///src/app/pipes/lesson-tooltip.pipe.ts","webpack:///src/app/pipes/option.pipe.ts","webpack:///src/app/pipes/score-icon.pipe.ts","webpack:///src/app/pipes/time-range.pipe.ts","webpack:///src/app/pipes/week.pipe.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/demo.service.ts","webpack:///src/app/services/groups.service.ts","webpack:///src/app/services/history.service.ts","webpack:///src/app/services/init.service.ts","webpack:///src/app/services/now-time.service.ts","webpack:///src/app/services/recommender.service.ts","webpack:///src/app/services/responsive.service.ts","webpack:///src/app/services/route-params.service.ts","webpack:///src/app/services/schedule.service.ts","webpack:///src/app/services/search.service.ts","webpack:///src/app/services/session.service.ts","webpack:///src/app/services/storage.service.ts","webpack:///src/app/services/targets.service.ts","webpack:///src/app/services/theme.service.ts","webpack:///src/app/utils/compare-students.ts","webpack:///src/app/utils/create-guid.ts","webpack:///src/app/utils/day-from-number.ts","webpack:///src/app/utils/get-campus.ts","webpack:///src/app/utils/lang/enumerate.ts","webpack:///src/app/utils/normalize-query.ts","webpack:///src/app/utils/random-element.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","init","AppModule","AboutModalComponent","dialogRef","api","theme","comment","sent","close","sendComment","toPromise","AppComponent","route","params","FooterComponent","dialog","storage","open","width","maxWidth","panelClass","autoFocus","user","getUser","setUser","openModal","HomeComponent","changeDetectorRef","media","responsive","target","opened","mobile","targetsObservable","pipe","isMobile","targets","length","mobileQuery","matchMedia","mobileQueryListener","detectChanges","addListener","event","next","matches","LessonDetailsComponent","schedule","RecommendationsComponent","recommender","full","option","timeRange","replace","location","hash","setTimeout","week","day","ScheduleDayComponent","nowTime","combinedSchedule","subscribe","s","days","timeSlots","groupsLessons","lesson","selectedLesson","slot","range","decodeURI","slice","toLowerCase","today","currentWeek","weekName","map","l","group","ScheduleTableComponent","SearchComponent","search","history","addFirst","clear","limitClickStream","groups","showAll","Infinity","limit","take","results","students","addGroup","addStudent","input","queryElem","nativeElement","value","q","query","TargetsComponent","ApiInterceptorService","httpReq","clone","url","backendOrigin","handle","imports","MaterialImportsModule","InStoragePipe","hasGroupSchedule","LessonNumberPipe","numbers","LessonTooltipPipe","parts","type","name","teacher","join","OptionPipe","verbalize","ScoreIconPipe","score","TimeRangePipe","part","split","WeekPipe","ApiService","http","groupName","get","toUpperCase","trim","sessionId","message","timestamp","Date","getTime","post","targetsInfo","DemoService","ira","avatar","serg","window","pathname","includes","GroupsService","getGroups","setGroups","gs","names","Set","HistoryService","Map","getHistory","updateHistory","bind","count","set","setHistory","InitService","demo","isInitialized","all","console","log","NowTimeService","setThisDay","setInterval","storedWeekString","localStorage","getItem","JSON","parse","getCurrentWeek","setItem","stringify","getDay","RecommenderService","daysOrder","options","flatten","d","filter","isPassed","buildOptions","o","scoreOption","orderBy","daysCase","пн","вт","ср","чт","пт","сб","вс","dayOrder","dayName","todayOrder","every","lessonName","normalized","test","lessonNumber","lessonsBefore","i","lessonsAfter","militaryDayGroups","peDayGroups","isMilitary","push","isPe","hasLessons","freeDayGroups","g","has","slotToTest","prevSlot","nextSlot","isSlotFree","getLessonsBefore","getLessonsAfter","locationsBefore","locationsAfter","sameCampusBefore","size","sameCampusAfter","sameClassroomBefore","sameClassroomAfter","totalWaitTime","Object","values","reduce","acc","cur","Math","abs","nearestLessonBefore","maxBy","nearestLessonAfter","minBy","nearestLessonBeforeNumber","nearestLessonAfterNumber","totalWaitLessons","scored","terms","ResponsiveService","RouteParamsService","router","ts","updateRoute","navigate","relativeTo","queryParams","queryParamMap","groupsString","loadFromRoute","ScheduleService","t","schedulePromise","flattenSchdeule","lessons","combineSchedules","schedules","materialColors","flatLessons","flattenDeep","numerator","denominator","color","transform","entries","groupBy","lessonsOfWeek","lessonsOfDay","lessonsOfSlot","SearchService","groupsService","session","searchedGroups","groupsCount","searchStudents","guid","targetsStudents","targetedStudents","find","SessionService","milliseconds","toString","startTimeMs","StorageService","targetsKey","groupsKey","userKey","themeKey","historyKey","key","obj","stringified","storingTargets","pairs","userInfo","isDark","TargetsService","targetsSubject","asObservable","getTargets","student","setTargets","existedTarget","cahcedSchedule","getGroupSchedule","apiSchedule","getSchedule","errors","setGroupSchedule","scheduleLoaded","remove","ThemeService","html","document","getElementsByTagName","item","_isDark","getTheme","v","className","setTheme","compareStudents","student1","student2","vk_id","createGuid","u","now","random","repeat","substr","getDayFromNuber","dayNumber","campuses","л","ю","э","м","getCampus","classroom","letter","hasOwnProperty","enumerate","reverse","last","rest","w","r","y","p","a","f","h","j","k","z","x","c","b","n","m","normalizeText","lower","ruLayout","singleSpaced","randomElement","array","floor","environment","production","vkAppId","err","error","navigator","serviceWorker","register"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '**',\r\n    component: HomeComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './components/app/app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { ApiInterceptorService } from './interceptors/api-interceptor.service';\r\nimport { MaterialImportsModule } from './material-imports/material-imports.module';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { InitService } from './services/init.service';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TargetsComponent } from './components/targets/targets.component';\r\nimport { ScheduleTableComponent } from './components/schedule-table/schedule-table.component';\r\nimport { ScheduleDayComponent } from './components/schedule-day/schedule-day.component';\r\nimport { LessonTooltipPipe } from './pipes/lesson-tooltip.pipe';\r\nimport { LessonDetailsComponent } from './components/lesson-details/lesson-details.component';\r\nimport { RecommendationsComponent } from './components/recommendations/recommendations.component';\r\nimport { LessonNumberPipe } from './pipes/lesson-number.pipe';\r\nimport { OptionPipe } from './pipes/option.pipe';\r\nimport { HasSchedulePipe } from './pipes/has-schedule.pipe';\r\nimport { ScoreIconPipe } from './pipes/score-icon.pipe';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { AboutModalComponent } from './components/about-modal/about-modal.component';\r\nimport { WeekPipe } from './pipes/week.pipe';\r\nimport { TimeRangePipe } from './pipes/time-range.pipe';\r\nimport { VkOauthComponent } from './components/vk-oauth/vk-oauth.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { InStoragePipe } from './pipes/in-storage.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    SearchComponent,\r\n    TargetsComponent,\r\n    ScheduleTableComponent,\r\n    ScheduleDayComponent,\r\n    LessonTooltipPipe,\r\n    LessonDetailsComponent,\r\n    RecommendationsComponent,\r\n    LessonNumberPipe,\r\n    OptionPipe,\r\n    HasSchedulePipe,\r\n    ScoreIconPipe,\r\n    FooterComponent,\r\n    AboutModalComponent,\r\n    WeekPipe,\r\n    TimeRangePipe,\r\n    VkOauthComponent,\r\n    InStoragePipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ServiceWorkerModule.register('./ngsw-worker.js', { enabled: environment.production }),\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MaterialImportsModule,\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptorService, multi: true },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: (init: InitService) => () => init.init(),\r\n      deps: [InitService],\r\n      multi: true\r\n    },\r\n    LessonNumberPipe\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [AboutModalComponent]\r\n})\r\nexport class AppModule { }\r\n","<header>\r\n    <div>\r\n        <img src=\"assets/logo/touch-logo.svg\" alt=\"SDAL Touch\">\r\n    </div>\r\n    <button tabindex=\"0\" mat-icon-button (click)=\"close()\">\r\n        <mat-icon>clear</mat-icon>\r\n    </button>\r\n</header>\r\n<h1>Выбери время для встречи с друзьями</h1>\r\n<p>\r\n    Выбрать время для встречи с друзьями из Бауманки с новым сервисом от <a href=\"https://sdal.pw\">Лаборатории анализа\r\n        социальных данных</a> просто как никогда.\r\n</p>\r\n<ol class=\"steps\">\r\n    <li>\r\n        <h1>1</h1>\r\n        <div>Добавь через строку поиска несколько групп, расписание которых ты хочешь сравнить.</div>\r\n    </li>\r\n    <li>\r\n        <h1>2</h1>\r\n        <div>Перейди к списку рекомендаций, сформированных системой автоматически.</div>\r\n    </li>\r\n    <li>\r\n        <h1>3</h1>\r\n        <div>Выбери одну из рекомендаций или подбери время самостоятельно на основе сводной таблицы.</div>\r\n    </li>\r\n</ol>\r\n<h2>Любитель тёмных тем?</h2>\r\n<mat-slide-toggle [(ngModel)]=\"theme.isDark\">Киберрежим</mat-slide-toggle>\r\n<br><br>\r\n<!-- Киберрежим специально для тебя!<br><br> -->\r\nВыбранное расписание сохраняется и ты можешь смотреть его даже оффлайн! Вот и всё, пользуйся на здоровье!<br><br>\r\n<button class=\"raised\" (click)=\"close()\" mat-raised-button color=\"accent\">\r\n    <mat-icon>check_circle_outline</mat-icon>&nbsp;Я всё понял!\r\n</button>\r\n<!-- <h2>Фидбек</h2>\r\n<br>\r\nЧто-то неясно? Знаешь, как сделать приложение лучше? Хочешь поучаствовать в разработке? -->\r\n<!-- <mat-form-field>\r\n    <textarea #textarea [disabled]=\"sent\" matInput cols=\"30\" rows=\"5\" placeholder=\"Оставь комментарий\"\r\n        [(ngModel)]=\"comment\"></textarea>\r\n</mat-form-field>\r\n<button [disabled]=\"!comment\" *ngIf=\"!sent\" class=\"raised\" mat-raised-button color=\"primary\" (click)=\"send()\">\r\n    <mat-icon>send</mat-icon>&nbsp;Отправить\r\n</button>\r\n<button *ngIf=\"sent\" class=\"raised\" mat-raised-button color=\"primary\" (click)=\"sent = false; textarea.focus()\">\r\n    <mat-icon>accessibility_new</mat-icon>&nbsp;Хочу написать ещё!\r\n</button> -->","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { ThemeService } from 'src/app/services/theme.service';\r\n\r\n@Component({\r\n  selector: 'sdal-about-modal',\r\n  templateUrl: './about-modal.component.html',\r\n  styleUrls: ['./about-modal.component.scss']\r\n})\r\nexport class AboutModalComponent implements OnInit {\r\n\r\n  public comment = '';\r\n  public sent = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AboutModalComponent>,\r\n    private readonly api: ApiService,\r\n    public readonly theme: ThemeService,\r\n  ) { }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async send() {\r\n    this.sent = true;\r\n    await this.api.sendComment(this.comment).toPromise();\r\n    this.comment = '';\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { Component } from '@angular/core';\r\nimport { RouteParamsService } from '../../services/route-params.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ResponsiveService } from '../../services/responsive.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'sdal-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  providers: [RouteParamsService],\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly params: RouteParamsService,\r\n  ) {\r\n    params.init();\r\n  }\r\n\r\n  // public title = 'touch';\r\n}\r\n","<p>\r\n    <label>\r\n        <a href=\"https://sdal.pw\" class=\"copy\">\r\n            &copy; SDAL 2019\r\n        </a>\r\n    </label>\r\n    <button mat-raised-button color=\"primary\" (click)=\"openModal()\">\r\n        Что с этим делать\r\n        <mat-icon>help_outlined</mat-icon>\r\n    </button>\r\n</p>","import { Component, OnInit, Inject, AfterViewInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\r\nimport { AboutModalComponent } from '../about-modal/about-modal.component';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\n\r\n@Component({\r\n  selector: 'sdal-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements AfterViewInit {\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private readonly storage: StorageService,\r\n  ) { }\r\n\r\n  openModal(): void {\r\n    const dialogRef = this.dialog.open(AboutModalComponent, {\r\n      width: '100vw',\r\n      maxWidth: '700px',\r\n      panelClass: 'about-modal-pane',\r\n      autoFocus: false,\r\n      // maxHeight: '90vh'\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const user = this.storage.getUser();\r\n    if (!user) {\r\n      this.storage.setUser({});\r\n      this.openModal();\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"example-sidenav-container\">\r\n\r\n    <mat-sidenav #snav [mode]=\"(responsive.mobile | async) ? 'over' : 'side'\" [opened]=\"opened | async\"\r\n        class=\"mat-elevation-z6\">\r\n        <div class=\"scroll-box\">\r\n            <button mat-mini-fab (click)=\"snav.toggle()\" class=\"close-button\"\r\n                *ngIf=\"(target.targetsObservable | async)?.length\">\r\n                <mat-icon>{{ (responsive.mobile | async) ? 'chevron_right' : 'chevron_left' }} </mat-icon>\r\n            </button>\r\n            <div class=\"touch-logo-wrapper\">\r\n                <img src=\"assets/logo/touch-logo.svg\" alt=\"SDAL Touch\" class=\"touch-logo\">\r\n            </div>\r\n            <div>\r\n                <sdal-targets></sdal-targets>\r\n            </div>\r\n            <div *ngIf=\"(responsive.mobile | async) && ((target.targetsObservable | async)?.length)\">\r\n                <p>Перейдите к таблице или добавьте группы в сравнение ниже</p>\r\n                <button class=\"close-mobile\" mat-raised-button color=\"primary\" (click)=\"snav.toggle()\">\r\n                    Перейти к таблице\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <sdal-search></sdal-search>\r\n            </div>\r\n            <!-- <div>\r\n                <sdal-vk-oauth></sdal-vk-oauth>\r\n            </div> -->\r\n            <footer>\r\n                <sdal-footer></sdal-footer>\r\n            </footer>\r\n        </div>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n        <span>\r\n            <button mat-mini-fab (click)=\"snav.toggle()\" class=\"menu-button\" *ngIf=\"!snav.opened\">\r\n                <mat-icon>menu</mat-icon>\r\n            </button>\r\n        </span>\r\n        <div class=\"scroll-box\">\r\n            <sdal-recommendations></sdal-recommendations>\r\n            <sdal-schedule-table></sdal-schedule-table>\r\n            <sdal-lesson-details></sdal-lesson-details>\r\n        </div>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { ResponsiveService } from 'src/app/services/responsive.service';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { first, filter, tap, map } from 'rxjs/operators';\r\nimport { TargetsService } from '../../services/targets.service';\r\nimport { combineLatest } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'sdal-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  public mobileQuery: MediaQueryList;\r\n\r\n  private mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    public readonly changeDetectorRef: ChangeDetectorRef,\r\n    public readonly media: MediaMatcher,\r\n    public readonly responsive: ResponsiveService,\r\n    public readonly target: TargetsService,\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(max-width: 1000px)');\r\n    this.mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this.mobileQueryListener);\r\n    this.mobileQuery.addListener((event) => this.responsive.mobile.next(event.matches));\r\n    this.responsive.mobile.next(this.mobileQuery.matches);\r\n  }\r\n\r\n  public opened = combineLatest(\r\n    this.responsive.mobile,\r\n    this.target.targetsObservable,\r\n  ).pipe(\r\n    map(([isMobile, targets]) => !(isMobile && targets && targets.length)),\r\n    first(),\r\n  );\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-card *ngIf=\"schedule.selectedLesson | async as lesson\" class=\"mat-elevation-z8\">\r\n    <!-- <div> -->\r\n    <mat-card-title>{{lesson.name}}\r\n        <button mat-icon-button (click)=\"schedule.selectedLesson.next(null)\">\r\n            <mat-icon>clear</mat-icon>\r\n        </button>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n        <mat-chip-list>\r\n\r\n            <mat-chip color=\"warn\" [selected]=\"true\">\r\n                <mat-icon>group</mat-icon> &nbsp;{{lesson.group}}\r\n            </mat-chip>\r\n            <mat-chip color=\"primary\" [selected]=\"true\" *ngIf=\"lesson\">\r\n                <mat-icon>calendar_today</mat-icon> &nbsp; {{lesson.week}}, {{lesson.day}}\r\n            </mat-chip>\r\n            <mat-chip color=\"primary\" [selected]=\"true\" *ngIf=\"lesson\">\r\n                <mat-icon>access_time</mat-icon> &nbsp; {{lesson.timeRange}}\r\n            </mat-chip>\r\n            <mat-chip color=\"accent\" [selected]=\"true\" *ngIf=\"lesson.type\">\r\n                <mat-icon>category</mat-icon> &nbsp;{{lesson.type}}\r\n            </mat-chip>\r\n            <mat-chip color=\"accent\" [selected]=\"true\" *ngIf=\"lesson.teacher\">\r\n                <mat-icon>record_voice_over</mat-icon> &nbsp;{{lesson.teacher}}\r\n            </mat-chip>\r\n            <mat-chip color=\"accent\" [selected]=\"true\" *ngIf=\"lesson.location\">\r\n                <mat-icon>my_location</mat-icon> &nbsp; {{lesson.location}}\r\n            </mat-chip>\r\n        </mat-chip-list>\r\n    </mat-card-content>\r\n    <!-- </div> -->\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { ScheduleService } from 'src/app/services/schedule.service';\r\n\r\n@Component({\r\n  selector: 'sdal-lesson-details',\r\n  templateUrl: './lesson-details.component.html',\r\n  styleUrls: ['./lesson-details.component.scss']\r\n})\r\nexport class LessonDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    public readonly schedule: ScheduleService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div mat-button class=\"wrapper\" *ngIf=\"recommender.options | async as options\">\r\n    <h3 mat-subheader>Рекомендации</h3>\r\n    <ng-container *ngFor=\"let option of options; index as i\">\r\n        <mat-card *ngIf=\"full || i < 3\" class=\"list-item\" (click)=\"move(option)\">\r\n            <!-- [style.color]=\"'rgb(' + (250 - option.score * 5) +','+ option.score*5 +',0)'\" -->\r\n            <mat-icon class=\"item-icon\">{{option.score | scoreIcon}}</mat-icon>\r\n            {{option.score}}\r\n            <div class=\"option\">\r\n                <!-- href=\"#{{option.week + '-' + option.day}}\"> -->\r\n                {{option | option : false}}\r\n            </div>\r\n            <br>\r\n        </mat-card>\r\n    </ng-container>\r\n    <p>\r\n        <mat-slide-toggle [(ngModel)]=\"full\">Показать все рекомендации</mat-slide-toggle>\r\n    </p>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { RecommenderService } from 'src/app/services/recommender.service';\r\nimport _ from 'lodash';\r\nimport { Option } from '../../models/recommendations-models';\r\n\r\n@Component({\r\n  selector: 'sdal-recommendations',\r\n  templateUrl: './recommendations.component.html',\r\n  styleUrls: ['./recommendations.component.scss']\r\n})\r\nexport class RecommendationsComponent implements OnInit {\r\n\r\n  public full = false;\r\n\r\n  constructor(\r\n    public readonly recommender: RecommenderService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public move(option: Option) {\r\n    const timeRange = option.timeRange.replace(' - ', '-');\r\n    location.hash = '';\r\n    setTimeout(() => location.hash = `${option.week}-${option.day}-${timeRange}`, 50);\r\n  }\r\n\r\n}\r\n","<!-- <h3 mat-header>{{day.dayName}}</h3>\r\n<mat-card [attr.id]=\"id\" [class.today]=\"isToday\">\r\n    <div class=\"time-slot\">\r\n        <div *ngFor=\"let group of groups\">\r\n            {{group}}\r\n        </div>\r\n    </div>\r\n    <div *ngFor=\"let slot of day.timeSlots; let odd = odd;\" class=\"time-slot\" [class.odd]=\"odd\">\r\n        <div class=\"time-range\">{{slot.timeRange}}</div>\r\n        <div class=\"groups-lessons\">\r\n            <ng-container *ngFor=\"let lesson of slot.groupsLessons\">\r\n                <div *ngIf=\"lesson.name; else empty\" [style.background]=\"lesson.color\"\r\n                    [matTooltip]=\"lesson | lessonTooltip\" class=\"group-lesson\" (click)=\"selectLesson(lesson)\">\r\n                    {{lesson.type}}\r\n                    <ng-container *ngIf=\"slot.groupsLessons.length <= 2\">\r\n                        {{lesson.name}}\r\n                    </ng-container> {{lesson.location}}\r\n                </div>\r\n            </ng-container>\r\n            <ng-template #empty>\r\n                <div></div>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n</mat-card> -->\r\n\r\n<h3 mat-subheader>{{day.dayName}}\r\n    <ng-container *ngIf=\"isToday\">\r\n        (сегодня)\r\n    </ng-container>\r\n</h3>\r\n<mat-card [attr.id]=\"id\" [class.today]=\"isToday\" color=\"primary\">\r\n    <table>\r\n        <tr class=\"time-slot\">\r\n            <th class=\"time-range\" style=\"width: 43px\"></th>\r\n            <th *ngFor=\"let group of groups\" [style.width.%]=\"width\">\r\n                {{group}}\r\n            </th>\r\n        </tr>\r\n        <tr *ngFor=\"let slot of day.timeSlots; let odd = odd;\" class=\"time-slot\" [class.odd]=\"odd\"\r\n            [attr.id]=\"getSlotId(slot)\" [class.selected]=\"getSlotId(slot) === hash\">\r\n            <td class=\"time-range\">\r\n                <span>{{slot.timeRange | timeRange : 'start' }}</span><br>\r\n                <span>{{slot.timeRange | timeRange : 'finish'}}</span>\r\n            </td>\r\n            <!-- < class=\"groups-lessons\"> -->\r\n            <ng-container *ngFor=\"let lesson of slot.groupsLessons\">\r\n                <td *ngIf=\"lesson.name; else empty\" [style.background]=\"lesson.color\"\r\n                    [matTooltip]=\"lesson | lessonTooltip\" class=\"group-lesson\" (click)=\"selectLesson(lesson)\">\r\n                    {{lesson.type}}\r\n                    <ng-container *ngIf=\"slot.groupsLessons.length <= 2\">\r\n                        {{lesson.name}}\r\n                    </ng-container> {{lesson.location}}\r\n                </td>\r\n            </ng-container>\r\n            <ng-template #empty>\r\n                <td></td>\r\n            </ng-template>\r\n            <!-- </> -->\r\n        </tr>\r\n    </table>\r\n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CombinedDaySchedule, FullLesson, ScheduleTimeSlot } from 'src/app/models/schedule-models';\r\nimport { ScheduleService } from 'src/app/services/schedule.service';\r\nimport { NowTimeService } from 'src/app/services/now-time.service';\r\n\r\n@Component({\r\n  selector: 'sdal-schedule-day',\r\n  templateUrl: './schedule-day.component.html',\r\n  styleUrls: ['./schedule-day.component.scss']\r\n})\r\nexport class ScheduleDayComponent implements OnInit {\r\n\r\n  @Input()\r\n  public day!: CombinedDaySchedule;\r\n\r\n  constructor(\r\n    private readonly schedule: ScheduleService,\r\n    private readonly nowTime: NowTimeService,\r\n  ) { }\r\n\r\n  public width = 100;\r\n\r\n  public get hash() {\r\n    return decodeURI(location.hash).slice(1);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.schedule.combinedSchedule.subscribe(s => {\r\n      this.width = 100 / (s && s[0].days[0].timeSlots[0].groupsLessons.length || 1);\r\n    });\r\n  }\r\n\r\n  public selectLesson(lesson: FullLesson) {\r\n    this.schedule.selectedLesson.next(lesson);\r\n  }\r\n\r\n  public get id() {\r\n    // TODO: Filth\r\n    const { week, day } = this.day.timeSlots[0].groupsLessons[0];\r\n    return `${week}-${day}`.toLowerCase();\r\n  }\r\n\r\n  public get isToday() {\r\n    const { week, day } = this.day.timeSlots[0].groupsLessons[0];\r\n    return this.nowTime.today === day && this.nowTime.currentWeek.weekName === week;\r\n  }\r\n\r\n  public get groups() {\r\n    return this.day.timeSlots[0].groupsLessons.map(l => l.group);\r\n  }\r\n\r\n  public getSlotId(slot: ScheduleTimeSlot) {\r\n    const range = slot.timeRange.replace(' - ', '-');\r\n    return `${this.id}-${range}`;\r\n  }\r\n}\r\n","<ng-container *ngIf=\"schedule.combinedSchedule | async as combinedSchedule; else noSchedule\">\r\n    <div *ngFor=\"let week of combinedSchedule\" class=\"week-schedule\">\r\n        <h2 mat-header> {{week.weekName }} ({{week.weekName | week}})</h2>\r\n        <sdal-schedule-day *ngFor=\"let day of week.days\" [day]=\"day\">\r\n        </sdal-schedule-day>\r\n    </div>\r\n</ng-container>\r\n<ng-template #noSchedule>\r\n    <p style=\"height: 80vh; display: flex; align-items: center;\">Выберите группы для сравнения расписания.</p>\r\n</ng-template>","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { ScheduleService } from 'src/app/services/schedule.service';\r\n\r\n@Component({\r\n  selector: 'sdal-schedule-table',\r\n  templateUrl: './schedule-table.component.html',\r\n  styleUrls: ['./schedule-table.component.scss']\r\n})\r\nexport class ScheduleTableComponent implements OnInit {\r\n\r\n  constructor(\r\n    public readonly schedule: ScheduleService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<h3 mat-subheader>\r\n    {{(targets.targetsObservable | async)?.length ? 'Добавить группы в сравнение' : 'Найти расписания групп'}}\r\n\r\n</h3>\r\n<mat-form-field mat-list-item>\r\n    <button color=\"primary\" mat-raised-button matSuffix (click)=\"addFirst.next(); query.value = '';\"\r\n        *ngIf=\"(search.groupsCount | async) == 1\">\r\n        <mat-icon>add</mat-icon> Добавить {{(search.results | async).groups[0]}}\r\n    </button>\r\n    <input #query type=\"text\" matInput (keydown.enter)=\"addFirst.next()\" placeholder=\"Введите название группы...\">\r\n    <button mat-icon-button matSuffix (click)=\"query.value = ''; clear.next()\"\r\n        [style.visibility]=\"query.value ? 'initial' : 'hidden'\">\r\n        <mat-icon>clear</mat-icon>\r\n    </button>\r\n    <!-- <button mat-icon-button matPrefix>\r\n        <mat-icon>help_outlined</mat-icon>\r\n    </button> -->\r\n    <mat-hint *ngIf=\"(search.groupsCount | async) == 1\">Нажмите Enter, чтобы добавить</mat-hint>\r\n</mat-form-field>\r\n<ng-container *ngIf=\"search.results | async as results\">\r\n    <mat-action-list *ngIf=\"results.groups || results.students\">\r\n        <ng-container *ngIf=\"results.groups\">\r\n            <h3 mat-subheader>Группы</h3>\r\n            <mat-list-item *ngFor=\"let group of groups | async\" (click)=\"addGroup(group)\">\r\n                <mat-icon mat-list-icon>supervised_user_circle</mat-icon>\r\n                <h4 mat-line class=\"group\">{{group}}</h4>\r\n                <!-- <span mat-line >{{history.history.get(group)}} {{((history.history.get(group) || 0) % 10) | i18nPlural : {'=0': 'No messages.', '=1': 'One message.', 'other': '# messages.'}}}</span> -->\r\n                <mat-icon class=\"cached\" *ngIf=\"group | inStorage\"\r\n                    matTooltip=\"Расписание группы закешировано и доступно оффлайн\">cached</mat-icon>\r\n                <button class=\"add-button\" mat-icon-button matTooltip=\"Добавить группу к сравнению\">\r\n                    <mat-icon>add_circle_outlined</mat-icon>\r\n                </button>\r\n            </mat-list-item>\r\n        </ng-container>\r\n        <!-- <mat-divider></mat-divider> -->\r\n        <!-- <ng-container *ngIf=\"results.students\">\r\n            <h3 mat-subheader>Студенты</h3>\r\n            <mat-list-item *ngFor=\"let student of results.students\">\r\n                <img mat-list-icon [src]=\"student.avatar\" *ngIf=\"student.avatar\" style=\"transform: scale(1.7)\">\r\n                <mat-icon mat-list-icon *ngIf=\"!student.avatar\">person</mat-icon>\r\n                <h4 mat-line>{{student.name}}</h4>\r\n                <p mat-line class=\"group\"> {{student.group}}</p>\r\n                <button class=\"add-button\" mat-icon-button (click)=\"targets.addStudent(student)\"\r\n                    *ngIf=\"student.group | hasSchedule\">\r\n                    <mat-icon>add_circle_outlined</mat-icon>\r\n                </button>\r\n            </mat-list-item>\r\n        </ng-container> -->\r\n        <mat-list-item mat-button *ngIf=\"(search.groupsCount | async) - (groups | async).length as count\"\r\n            (click)=\"limitClickStream.next(true)\">\r\n            <mat-icon mat-list-icon>more_horiz</mat-icon>\r\n            Показать ещё {{count}}\r\n        </mat-list-item>\r\n    </mat-action-list>\r\n\r\n    <p *ngIf=\"!results.groups && !query.value\">\r\n        Введите запрос, чтобы найти группы\r\n    </p>\r\n    <p *ngIf=\"!results.groups && query.value\">\r\n        По вашему запросу ничего не найдено. Скорее всего, расписание искомой группы отсутсвует в\r\n        электоронном университете.\r\n    </p>\r\n</ng-container>\r\n","import { Component, OnInit, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { merge, fromEvent, Subject, combineLatest, BehaviorSubject } from 'rxjs';\r\nimport { map, distinct, distinctUntilChanged, debounceTime, mergeMap, first } from 'rxjs/operators';\r\nimport { SearchService } from 'src/app/services/search.service';\r\nimport { TargetsService } from 'src/app/services/targets.service';\r\nimport _ from 'lodash';\r\nimport { HistoryService } from '../../services/history.service';\r\nimport { ResponsiveService } from '../../services/responsive.service';\r\nimport { StorageService } from '../../services/storage.service';\r\n\r\n@Component({\r\n  selector: 'sdal-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('query')\r\n  private queryElem!: ElementRef<HTMLInputElement>;\r\n\r\n  public readonly addFirst = new Subject();\r\n\r\n  public clear = new Subject();\r\n\r\n  constructor(\r\n    public readonly search: SearchService,\r\n    public readonly targets: TargetsService,\r\n    public readonly responsive: ResponsiveService,\r\n    public readonly history: HistoryService,\r\n    private readonly storage: StorageService,\r\n  ) {\r\n    this.addFirst.pipe(\r\n      mergeMap(() => search.results.pipe(first())),\r\n    ).subscribe(({ students, groups }) => {\r\n      if (groups && groups.length) {\r\n        this.targets.addGroup(groups[0]);\r\n      } else if (students && students.length) {\r\n        this.targets.addStudent(students[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public limitClickStream = new BehaviorSubject(false);\r\n\r\n  public groups = combineLatest(\r\n    this.search.groups,\r\n    this.limitClickStream.pipe(\r\n      map(showAll => showAll ? Infinity : 8),\r\n    )\r\n  ).pipe(\r\n    map(([groups, limit]) => _.take(groups, limit)),\r\n  );\r\n\r\n  // public searchResultLength = this.search.results.pipe(\r\n  //   map(({ groups, students }) => (groups && groups.length || 0) + (students && students.length || 0)),\r\n  // );\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const input = this.queryElem.nativeElement;\r\n    // Emit on clear\r\n    merge(fromEvent(input, 'input'), fromEvent(input, 'change'), this.clear).pipe(\r\n      map(() => input.value),\r\n      distinctUntilChanged(),\r\n      debounceTime(400),\r\n      // map()\r\n    ).subscribe(q => {\r\n      this.search.query.next(q);\r\n      this.limitClickStream.next(false);\r\n    });\r\n  }\r\n\r\n  public addGroup(group: string) {\r\n    this.targets.addGroup(group);\r\n  }\r\n\r\n\r\n\r\n  // public onClick() {\r\n  //   this.\r\n  // }\r\n\r\n\r\n}\r\n","<ng-container *ngIf=\"targets.targetsObservable | async as targetsList; else noTargets\">\r\n    <h3 mat-subheader class=\"header\">\r\n        <span> Расписания в сравнении </span>\r\n        <button mat-button (click)=\"targets.clear()\">\r\n            Очистить<mat-icon>clear</mat-icon>\r\n        </button>\r\n    </h3>\r\n    <mat-list>\r\n        <!-- TODO: remove style=\"transform: scale(1.7)\" attributes -->\r\n        <ng-container *ngFor=\"let target of targetsList\">\r\n            <mat-list-item *ngIf=\"target.students && target.students.length == 1 && target.students[0] as student;\">\r\n                <mat-icon mat-list-icon *ngIf=\"!target.scheduleLoaded\" style=\"transform: scale(1.7)\" class=\"loading\">\r\n                  autorenew</mat-icon>\r\n                <img mat-list-icon [src]=\"student.avatar\" *ngIf=\"target.scheduleLoaded && student.avatar\"\r\n                    style=\"transform: scale(1.7)\">\r\n                <mat-icon mat-list-icon *ngIf=\"target.scheduleLoaded && !student.avatar\" style=\"transform: scale(1.7)\">\r\n                    account_circle</mat-icon>\r\n\r\n                <h4 mat-line>{{student.name}}</h4>\r\n                <p mat-line class=\"group\"> {{student.group}}</p>\r\n                <button class=\"add-button\" mat-icon-button (click)=\"targets.removeGroup(target.group)\">\r\n                    <mat-icon>clear</mat-icon>\r\n                </button>\r\n            </mat-list-item>\r\n            <!-- TODO: [style.color]=\"target.color\" -->\r\n            <mat-list-item *ngIf=\"!target.students || target.students.length !== 1\">\r\n                <mat-icon mat-list-icon style=\"transform: scale(1.7)\" [class.loading]=\"!target.scheduleLoaded\">\r\n                    {{target.scheduleLoaded ? 'supervised_user_circle' : 'autorenew'}}\r\n                </mat-icon>\r\n                <h4 mat-line class=\"group\">{{target.group}}</h4>\r\n                <span mat-line *ngIf=\"target.students as students\">\r\n                    ({{students[0].name}}<ng-container *ngIf=\"students.length > 1\">\r\n                        и ещё {{students.length - 1}}</ng-container>)\r\n                </span>\r\n                <button class=\"add-button\" mat-icon-button (click)=\"targets.removeGroup(target.group)\" (click)=\"1+1\">\r\n                    <mat-icon>clear</mat-icon>\r\n                </button>\r\n            </mat-list-item>\r\n        </ng-container>\r\n    </mat-list>\r\n</ng-container>\r\n<ng-template #noTargets>\r\n    <p>Добавтьте несколько расписаний для сравнения.</p>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TargetsService } from 'src/app/services/targets.service';\r\nimport { ResponsiveService } from '../../services/responsive.service';\r\n\r\n@Component({\r\n  selector: 'sdal-targets',\r\n  templateUrl: './targets.component.html',\r\n  styleUrls: ['./targets.component.scss']\r\n})\r\nexport class TargetsComponent implements OnInit {\r\n\r\n  constructor(\r\n    public readonly targets: TargetsService,\r\n    public readonly responsive: ResponsiveService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiInterceptorService implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    const httpReq = req.clone({\r\n      url: `${environment.backendOrigin}${req.url}`,\r\n    });\r\n\r\n    return next.handle(httpReq);\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nconst imports = [\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatInputModule,\r\n  MatSidenavModule,\r\n  MatToolbarModule,\r\n  MatListModule,\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n  MatChipsModule,\r\n  MatSlideToggleModule,\r\n  MatDialogModule,\r\n  MatProgressSpinnerModule,\r\n];\r\n\r\n@NgModule({\r\n  imports,\r\n  exports: imports,\r\n})\r\nexport class MaterialImportsModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { StorageService } from '../services/storage.service';\r\n\r\n@Pipe({\r\n  name: 'inStorage'\r\n})\r\nexport class InStoragePipe implements PipeTransform {\r\n\r\n  constructor(\r\n    private readonly storage: StorageService,\r\n  ) { }\r\n\r\n  transform(group: string): any {\r\n    return this.storage.hasGroupSchedule(group);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'lessonNumber'\r\n})\r\nexport class LessonNumberPipe implements PipeTransform {\r\n\r\n  private readonly numbers = {\r\n    '08:30 - 10:05': 1,\r\n    '10:15 - 11:50': 2,\r\n    '12:00 - 13:35': 3,\r\n    '13:50 - 15:25': 4,\r\n    '15:40 - 17:15': 5,\r\n    '17:25 - 19:00': 6,\r\n    '19:10 - 20:45': 7,\r\n  };\r\n\r\n  public transform(timeRange: string) {\r\n    return (this.numbers as any)[timeRange];\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { FullLesson } from '../models/schedule-models';\r\n\r\n@Pipe({\r\n  name: 'lessonTooltip'\r\n})\r\nexport class LessonTooltipPipe implements PipeTransform {\r\n\r\n  transform(lesson: FullLesson): any {\r\n    const parts = [lesson.type, lesson.name, lesson.location, lesson.teacher];\r\n    return parts.join(' ');\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { RecommenderService } from '../services/recommender.service';\r\nimport { Option } from '../models/recommendations-models';\r\n\r\n@Pipe({\r\n  name: 'option'\r\n})\r\nexport class OptionPipe implements PipeTransform {\r\n\r\n  constructor(\r\n    private readonly recommender: RecommenderService\r\n  ) { }\r\n\r\n  transform(option: Option) {\r\n    return this.recommender.verbalize(option);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'scoreIcon'\r\n})\r\nexport class ScoreIconPipe implements PipeTransform {\r\n\r\n  transform(score: number) {\r\n    if (score > 40) {\r\n      return 'star';\r\n    } else if (score > 35) {\r\n      return 'star_half';\r\n    } else {\r\n      return 'navigate_next';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'timeRange'\r\n})\r\nexport class TimeRangePipe implements PipeTransform {\r\n\r\n  transform(timeRange: string, part: 'start' | 'finish'): any {\r\n    return timeRange.split(' - ')[part === 'start' ? 0 : 1];\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { NowTimeService } from '../services/now-time.service';\r\n\r\n@Pipe({\r\n  name: 'week'\r\n})\r\nexport class WeekPipe implements PipeTransform {\r\n\r\n  constructor(\r\n    private readonly nowTime: NowTimeService,\r\n  ) { }\r\n\r\n  transform(weekName: 'знаменатель' | 'числитель'): any {\r\n    return this.nowTime.currentWeek.weekName === weekName ? 'эта неделя' : 'следующая неделя';\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GroupSchedule, WeekInfo } from '../models/schedule-models';\r\nimport { Student } from '../models/student';\r\nimport { TargetsTelemetry } from '../models/telemetry-models';\r\nimport { TouchUser } from '../models/touch-auth-models';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(\r\n    private readonly http: HttpClient\r\n  ) { }\r\n\r\n  // TODO: Uppercase on server-side\r\n  public getSchedule(groupName: string): Observable<GroupSchedule> {\r\n    return this.http.get<GroupSchedule>(`/api/schedule/groups/${groupName.toUpperCase()}`).pipe(\r\n      tap((schedule: GroupSchedule) => schedule.name = schedule.name.trim())\r\n    );\r\n  }\r\n\r\n  public getGroups() {\r\n    return this.http.get<string[]>(`/api/schedule/groups`);\r\n  }\r\n\r\n  public searchStudents(query?: string, limit?: number, sessionId?: string) {\r\n    return this.http.get<Student[]>(`/api/students`, {\r\n      params: {\r\n        query,\r\n        limit,\r\n        sessionId\r\n        // group: { $exists: true },\r\n      } as any\r\n    });\r\n  }\r\n\r\n  public sendComment(comment: string) {\r\n\r\n    const message = {\r\n      comment,\r\n      timestamp: new Date().getTime(),\r\n    };\r\n\r\n    return this.http.post('/api/touch/comments', message);\r\n  }\r\n\r\n  public sendTargetsTelemetry(targetsInfo: TargetsTelemetry) {\r\n    return this.http.post('/api/touch/telemetry/targets', targetsInfo);\r\n  }\r\n\r\n  public getCurrentWeek() {\r\n    return this.http.get<WeekInfo>('/api/schedule/current-week');\r\n  }\r\n\r\n  public signOut(sessionId: string) {\r\n    return this.http.delete(`/api/touch/user/${sessionId}`);\r\n  }\r\n\r\n  public getTouchUser(sessionId: string) {\r\n    return this.http.get<TouchUser | null>(`/api/touch/user/${sessionId}`);\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TargetsService } from './targets.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DemoService {\r\n\r\n  public ira = {\r\n    name: 'Уланова Ирина Вадимовна',\r\n    group: 'СГН3-72Б',\r\n    avatar: 'https://sun9-35.userapi.com/c850720/v850720133/18ef38/lkCyM3Z0mTM.jpg?ava=1'\r\n  };\r\n\r\n  public serg = {\r\n    name: 'Соловьев Сергей Александрович',\r\n    group: 'СГН3-71Б'\r\n  };\r\n\r\n  constructor(\r\n    private readonly targets: TargetsService,\r\n  ) { }\r\n\r\n  async init() {\r\n    if (window.location.pathname.includes('/%D0%B4%D0%BB%D1%8F_%D0%B8%D1%80%D1%8B')) {\r\n      this.targets.addGroup('СГН3-72Б', [this.ira]);\r\n      this.targets.addGroup('СГН3-71Б', [this.serg]);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { normalizeText } from '../utils/normalize-query';\r\nimport { StorageService } from './storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupsService {\r\n\r\n  public names!: Set<string>;\r\n\r\n  constructor(\r\n    private readonly api: ApiService,\r\n    private readonly storage: StorageService\r\n  ) { }\r\n\r\n  public async init() {\r\n    let groups = this.storage.getGroups();\r\n    if (!groups) {\r\n      groups = await this.api.getGroups().toPromise();\r\n      this.storage.setGroups(groups);\r\n    } else {\r\n      this.api.getGroups().toPromise().then(gs => {\r\n        this.storage.setGroups(gs);\r\n        this.names = new Set(gs);\r\n      });\r\n    }\r\n    this.names = new Set(groups);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TargetsService } from './targets.service';\r\nimport { StorageService } from './storage.service';\r\nimport { Target } from '../models/target';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HistoryService {\r\n\r\n  public history = new Map<string, number>();\r\n\r\n  constructor(\r\n    private readonly targets: TargetsService,\r\n    private readonly storage: StorageService,\r\n  ) {\r\n    this.history = storage.getHistory();\r\n    targets.targetsObservable.subscribe(this.updateHistory.bind(this));\r\n  }\r\n\r\n  updateHistory(targets: Target[] | null) {\r\n    for (const { group } of targets || []) {\r\n      const count = this.history.get(group) || 0;\r\n      this.history.set(group, count + 1);\r\n    }\r\n    this.storage.setHistory(this.history);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GroupsService } from './groups.service';\r\nimport { TelemetryService } from './telemetry.service';\r\nimport { ScheduleService } from './schedule.service';\r\nimport { NowTimeService } from './now-time.service';\r\nimport { ThemeService } from './theme.service';\r\nimport { DemoService } from './demo.service';\r\nimport { VkOauthService } from './vk-oauth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InitService {\r\n\r\n  private isInitialized = false;\r\n\r\n  constructor(\r\n    private readonly groups: GroupsService,\r\n    // private readonly telemetry: TelemetryService,\r\n    private readonly theme: ThemeService,\r\n    private readonly nowTime: NowTimeService,\r\n    private readonly demo: DemoService,\r\n    // private readonly auth: VkOauthService,\r\n  ) { }\r\n\r\n  /**\r\n   * Method to be executed befor the app starts.\r\n   */\r\n  public async init() {\r\n    if (this.isInitialized) {\r\n      throw new Error('Попытка повторной инициализации приложения');\r\n    }\r\n    this.isInitialized = true;\r\n    try {\r\n      // Here you can add your async initialization logic.\r\n      await Promise.all([\r\n        this.groups.init(),\r\n        this.nowTime.init(),\r\n        this.demo.init(),\r\n        // this.auth.init(),\r\n      ]);\r\n      console.log('Приложение было успешно инициализировано.');\r\n    } catch {\r\n      throw new Error('Во время инициализации приложения произошла ошибка.');\r\n    }\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { WeekInfo } from '../models/schedule-models';\r\nimport { repeatWhen } from 'rxjs/operators';\r\nimport { interval } from 'rxjs/internal/observable/interval';\r\nimport { getDayFromNuber as getDayFromNumer, DayNumber } from '../utils/day-from-number';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NowTimeService {\r\n\r\n  public currentWeek!: WeekInfo;\r\n\r\n  public today!: string;\r\n\r\n  constructor(\r\n    private readonly api: ApiService,\r\n  ) { }\r\n\r\n  public async init() {\r\n    this.setThisDay();\r\n    setInterval(() => this.setThisDay(), 1000 * 60);\r\n\r\n    // TODO: Calculate week offline\r\n    const storedWeekString = localStorage.getItem('touch:week');\r\n    const { timestamp, week } = storedWeekString && JSON.parse(storedWeekString) || {};\r\n    this.currentWeek = week || await this.api.getCurrentWeek().toPromise();\r\n    localStorage.setItem('touch:week', JSON.stringify({\r\n      timestamp: new Date(),\r\n      week: this.currentWeek,\r\n    }));\r\n\r\n    this.api.getCurrentWeek().pipe(\r\n      repeatWhen(() => interval(1000 * 60 * 60)),\r\n    ).subscribe(week => {\r\n      this.currentWeek = week;\r\n    });\r\n\r\n    // if (!location.hash) {\r\n    //   const hash = `#${this.currentWeek}-${this.today}`;\r\n    //   window.location.hash = hash;\r\n    // }\r\n  }\r\n\r\n\r\n\r\n  setThisDay() {\r\n    this.today = getDayFromNumer(new Date().getDay() as DayNumber);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ScheduleService } from './schedule.service';\r\nimport { CombinedDaySchedule, FullLesson, Lesson, ScheduleTimeSlot, CombinedWeekSchedule } from '../models/schedule-models';\r\nimport { map, tap, combineLatest, shareReplay } from 'rxjs/operators';\r\nimport _ from 'lodash';\r\nimport { Option, ScoredOption } from '../models/recommendations-models';\r\nimport { getCampus } from '../utils/get-campus';\r\nimport { LessonNumberPipe } from '../pipes/lesson-number.pipe';\r\nimport { enumerate } from '../utils/lang/enumerate';\r\nimport { randomElement } from '../utils/random-element';\r\nimport { NowTimeService } from './now-time.service';\r\nimport { WeekPipe } from '../pipes/week.pipe';\r\nimport { Subject } from 'rxjs';\r\nimport { TargetsService } from './targets.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecommenderService {\r\n\r\n  constructor(\r\n    private readonly schedule: ScheduleService,\r\n    private readonly nowTime: NowTimeService,\r\n    private readonly targets: TargetsService,\r\n  ) {\r\n    this.schedule.combinedSchedule.subscribe(async s => setTimeout(() => this.combinedSchedule.next(s)));\r\n  }\r\n\r\n  public readonly combinedSchedule = new Subject<CombinedWeekSchedule[] | null>();\r\n\r\n  private readonly daysOrder = new Map<string, number>([\r\n    ['пн', 1],\r\n    ['вт', 2],\r\n    ['ср', 3],\r\n    ['чт', 4],\r\n    ['пт', 5],\r\n    ['сб', 6],\r\n  ]);\r\n\r\n  public readonly options = this.combinedSchedule.pipe(\r\n    map(s => s || []),\r\n    // tap(a => console.log('recomputing', a)),\r\n    combineLatest(this.targets.targetsObservable),\r\n    map(([s, targets]) => targets && targets.length <= 1 ? [] : s),\r\n    map(s => _.flatten(s.map(d => d.days))),\r\n    map(days => days.filter(day => !this.isPassed(day))),\r\n    map(days => _.flatten(days.map(this.buildOptions.bind(this)))),\r\n    map(options => options.map(o => this.scoreOption(o))),\r\n    map(options => options.filter(o => o.score > 0)),\r\n    map(options => _.orderBy(options, o => -o.score)),\r\n    map(options => options.length ? options : null),\r\n    shareReplay(1),\r\n  );\r\n\r\n  daysCase = {\r\n    пн: 'в понедельник',\r\n    вт: 'во вторник',\r\n    ср: 'в среду',\r\n    чт: 'в четверг',\r\n    пт: 'в пятницу',\r\n    сб: 'в субботу',\r\n    вс: 'в воскресение',\r\n  } as { [day: string]: string };\r\n\r\n  private isPassed(day: CombinedDaySchedule) {\r\n    const week = day.timeSlots[0].groupsLessons[0].week;\r\n    const dayOrder = this.daysOrder.get(day.dayName) || 0;\r\n    const todayOrder = this.daysOrder.get(this.nowTime.today) || 0;\r\n    // return false;\r\n    return week === this.nowTime.currentWeek.weekName && dayOrder < todayOrder;\r\n  }\r\n\r\n  private isSlotFree(slot: ScheduleTimeSlot | undefined) {\r\n    return !slot || slot.groupsLessons.every(l => !l.name);\r\n  }\r\n\r\n  isMilitary(lessonName: string) {\r\n    const normalized = lessonName.split('/').join('').toLowerCase();\r\n    return normalized.includes('военная подготовка')\r\n      || /В\\/*П/.test(lessonName)\r\n      || /В\\/*К/.test(lessonName);\r\n  }\r\n\r\n  isPe(lessonName: string) {\r\n    const normalized = lessonName.split('/').join('').toLowerCase();\r\n    return normalized.includes('физкультура')\r\n      || normalized.includes('спорт')\r\n      || normalized.includes('валеология')\r\n      || normalized.includes('физическая культура');\r\n  }\r\n\r\n  private getLessonsBefore(timeSlots: ScheduleTimeSlot[], lessonNumber: number) {\r\n    const lessonsBefore = {} as { [group: string]: FullLesson };\r\n\r\n    for (let i = 0; i < lessonNumber - 1; i++) {\r\n      const slot = timeSlots[i];\r\n      for (const lesson of slot.groupsLessons) {\r\n        if (lesson.name) {\r\n          lessonsBefore[lesson.group] = lesson;\r\n        }\r\n      }\r\n    }\r\n\r\n    return lessonsBefore;\r\n  }\r\n\r\n  private getLessonsAfter(timeSlots: ScheduleTimeSlot[], lessonNumber: number) {\r\n    const lessonsAfter = {} as { [group: string]: FullLesson };\r\n\r\n    for (let i = 7 - 1; i > lessonNumber - 1; i--) {\r\n      const slot = timeSlots[i];\r\n      for (const lesson of slot.groupsLessons) {\r\n        if (lesson.name) {\r\n          lessonsAfter[lesson.group] = lesson;\r\n        }\r\n      }\r\n    }\r\n\r\n    return lessonsAfter;\r\n  }\r\n\r\n\r\n\r\n  private buildOptions({ dayName, timeSlots }: CombinedDaySchedule) {\r\n    const options: Option[] = [];\r\n\r\n    const flatten = _.flatten(timeSlots.map(s => s.groupsLessons)).filter(l => l.name);\r\n    const groups = timeSlots[0].groupsLessons.map(l => l.group);\r\n\r\n    const militaryDayGroups: string[] = [];\r\n    const peDayGroups: string[] = [];\r\n\r\n    for (const { name, group } of flatten) {\r\n      if (!name) {\r\n        continue;\r\n      }\r\n      if (this.isMilitary(name) && !militaryDayGroups.includes(group)) {\r\n        militaryDayGroups.push(group);\r\n      }\r\n      if (this.isPe(name) && !militaryDayGroups.includes(group)) {\r\n        peDayGroups.push(group);\r\n      }\r\n    }\r\n\r\n    const hasLessons = new Set(flatten.map(l => l.group));\r\n    const freeDayGroups: string[] = groups.filter(g => !hasLessons.has(g));\r\n\r\n    for (const slotToTest of timeSlots) {\r\n\r\n      const { week, day, timeRange, lessonNumber } = slotToTest.groupsLessons[0];\r\n\r\n      const prevSlot = timeSlots[lessonNumber - 1 - 1];\r\n      const nextSlot = timeSlots[lessonNumber + 1 - 1];\r\n\r\n      // TODO: Maybe suggest to meet in totally free days;\r\n      if (this.isSlotFree(prevSlot)\r\n        && this.isSlotFree(nextSlot)\r\n        || !this.isSlotFree(slotToTest)) {\r\n        continue;\r\n      }\r\n\r\n\r\n      // const lessonNumber = this.lessonNumber.transform(slotToTest.timeRange);\r\n\r\n      const lessonsBefore = this.getLessonsBefore(timeSlots, lessonNumber);\r\n      const lessonsAfter = this.getLessonsAfter(timeSlots, lessonNumber);\r\n\r\n      const locationsBefore = prevSlot && prevSlot.groupsLessons.map(l => l.location).filter(l => l);\r\n      const locationsAfter = nextSlot && nextSlot.groupsLessons.map(l => l.location).filter(l => l);\r\n\r\n\r\n      const sameCampusBefore = locationsBefore && locationsBefore.length === slotToTest.groupsLessons.length\r\n        && new Set(locationsBefore.map(l => l && getCampus(l))).size === 1 && getCampus(locationsBefore![0]!);\r\n\r\n      const sameCampusAfter = locationsAfter && locationsAfter.length === slotToTest.groupsLessons.length\r\n        && new Set(locationsAfter.map(l => l && getCampus(l))).size === 1 && getCampus(locationsAfter![0]!);\r\n\r\n      const sameClassroomBefore = sameCampusBefore\r\n        && new Set(locationsBefore).size === 1;\r\n\r\n      const sameClassroomAfter = sameCampusAfter\r\n        && new Set(locationsAfter).size === 1;\r\n\r\n      const totalWaitTime = [...Object.values(lessonsAfter), ...Object.values(lessonsBefore)]\r\n        .reduce((acc, cur) => acc + Math.abs(cur.lessonNumber - lessonNumber), 0);\r\n\r\n      const nearestLessonBefore = _.maxBy(Object.values(lessonsBefore), l => l.lessonNumber);\r\n      const nearestLessonAfter = _.minBy(Object.values(lessonsAfter), l => l.lessonNumber);\r\n\r\n      let type = 'free';\r\n      if (nearestLessonAfter && nearestLessonBefore) {\r\n        type = 'mixed';\r\n      } else if (nearestLessonBefore) {\r\n        type = 'after';\r\n      } else if (nearestLessonAfter) {\r\n        type = 'before';\r\n      }\r\n\r\n      const option = {\r\n        timeRange,\r\n        week,\r\n        day,\r\n        type,\r\n        lessonsBefore,\r\n        nearestLessonBeforeNumber: nearestLessonBefore && nearestLessonBefore.lessonNumber,\r\n        lessonsAfter,\r\n        nearestLessonAfterNumber: nearestLessonAfter && nearestLessonAfter.lessonNumber,\r\n        militaryDayGroups,\r\n        peDayGroups,\r\n        freeDayGroups,\r\n        sameCampusBefore,\r\n        sameClassroomBefore,\r\n        sameCampusAfter,\r\n        sameClassroomAfter,\r\n        totalWaitLessons: totalWaitTime,\r\n        // timeOfDay: 'morning',\r\n      } as Option;\r\n      options.push(option);\r\n    }\r\n    return options;\r\n  }\r\n\r\n  private scoreOption(option: Option) {\r\n    let score = 50;\r\n\r\n    if (option.type === 'after') {\r\n      score += 30;\r\n    } else if (option.type === 'before') {\r\n      score += 20;\r\n    } else if (option.type === 'mixed') {\r\n      score += 20;\r\n    } else if (option.type === 'free') {\r\n      score += 10;\r\n    }\r\n\r\n    // score -= option.maxLessonsWait * 5;\r\n    score -= option.totalWaitLessons * 6;\r\n\r\n    score -= (option.militaryDayGroups || []).length * 5;\r\n    score -= (option.freeDayGroups || []).length * 20;\r\n    score -= (option.peDayGroups || []).length * 2;\r\n\r\n    if (option.sameCampusBefore || option.sameCampusAfter) {\r\n      score += 15;\r\n    }\r\n\r\n    if (option.sameClassroomBefore || option.sameClassroomAfter) {\r\n      score += 30;\r\n    }\r\n\r\n    // TODO: Check if day has gone.\r\n    if (this.nowTime.currentWeek.weekName !== option.week) {\r\n      score -= 20;\r\n    }\r\n\r\n    const scored: ScoredOption = { ...option, score };\r\n\r\n    return scored;\r\n  }\r\n\r\n  public verbalize(option: Option, full?: boolean) {\r\n    const terms: string[] = [];\r\n    terms.push(randomElement([\r\n      'Устройте встречу',\r\n      'Договоритесь о встрече',\r\n      'Подходящее время для встречи',\r\n      'Можно встретиться',\r\n    ]));\r\n\r\n    // TODO: на этой неделе, на следующей неделе.\r\n    terms.push(`${this.daysCase[option.day]} на ${option.week === this.nowTime.currentWeek.weekName ? 'этой' : 'следующей'} неделе`);\r\n\r\n    switch (option.type) {\r\n      case 'before':\r\n        terms.push(`перед ${option.nearestLessonAfterNumber} парой`);\r\n        break;\r\n      case 'after':\r\n        terms.push(`после ${option.nearestLessonBeforeNumber} пары`);\r\n        break;\r\n      case 'mixed':\r\n        terms.push(`между ${option.nearestLessonBeforeNumber} и ${option.nearestLessonAfterNumber} парами`);\r\n        break;\r\n      case 'free':\r\n        terms.push(`в любое время, так как в этот день ни у кого нет пар`);\r\n        break;\r\n    }\r\n    terms.push('.');\r\n\r\n    if (option.sameClassroomBefore) {\r\n      terms.push('Очень удобное время, так последняя пара у вас - общая');\r\n    } else if (option.sameCampusBefore) {\r\n      terms.push(`Занятия у вас заканчиваются в одном корпусе - ${option.sameCampusBefore}.`);\r\n    }\r\n\r\n    if (option.sameClassroomAfter) {\r\n      terms.push('Первая после встречи пара у вас общая. Можете пойти туда вместе');\r\n    } else if (option.sameCampusAfter) {\r\n      terms.push(`Занятия как раз начинаются в одном корпусе - ${option.sameCampusAfter}.`);\r\n    }\r\n\r\n    if (option.militaryDayGroups && option.militaryDayGroups.length) {\r\n      terms.push(`У ребят из ${enumerate(...option.militaryDayGroups)} военка ${this.daysCase[option.day]}, что не очень удобно.`);\r\n    }\r\n\r\n    if (option.peDayGroups && option.peDayGroups.length) {\r\n      terms.push(`У ${enumerate(...option.peDayGroups)} в этот день физра, придётся таскаться с формой`);\r\n    }\r\n\r\n    if (option.freeDayGroups && option.freeDayGroups.length) {\r\n      terms.push(`Учтите, что групп${option.freeDayGroups.length === 1 ? 'ы' : ''}`);\r\n      terms.push(`${enumerate(...option.freeDayGroups)} в этот день нет пар`);\r\n    }\r\n\r\n    return terms.join(' ').replace(' .', '.');\r\n  }\r\n}\r\n","import { Injectable, ChangeDetectorRef } from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResponsiveService {\r\n\r\n  public readonly mobile = new BehaviorSubject<boolean>(false);\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Target } from '../models/target';\r\nimport { TargetsService } from './targets.service';\r\nimport { map, skip, tap, first, take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class RouteParamsService {\r\n\r\n  constructor(\r\n    private readonly router: Router,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly targets: TargetsService,\r\n  ) {\r\n    targets.targetsObservable.pipe(\r\n      skip(1),\r\n      map(ts => ts || []),\r\n    ).subscribe(this.updateRoute.bind(this));\r\n  }\r\n\r\n  public updateRoute(targets: Target[]) {\r\n    const groups = targets.map(target => target.group).join(',');\r\n    this.router.navigate([], {\r\n      relativeTo: this.route,\r\n      queryParams: groups.length && { groups } || {},\r\n      // queryParamsHandling: 'merge',\r\n    });\r\n  }\r\n\r\n  private async loadFromRoute() {\r\n    const groups = await this.route.queryParamMap.pipe(\r\n      skip(1),\r\n      map(params => params.get('groups')),\r\n      map(groupsString => groupsString && groupsString.split(',') || []),\r\n      first(),\r\n    ).toPromise();\r\n    for (const group of groups) {\r\n      this.targets.addGroup(group);\r\n    }\r\n  }\r\n\r\n  public init() {\r\n    this.loadFromRoute();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TargetsService } from './targets.service';\r\nimport { switchMap, map, filter, repeatWhen } from 'rxjs/operators';\r\nimport {\r\n  GroupSchedule,\r\n  FullLesson,\r\n  ScheduleTimeSlot,\r\n  CombinedDaySchedule,\r\n  CombinedWeekSchedule,\r\n  WeekInfo\r\n} from '../models/schedule-models';\r\nimport _ from 'lodash';\r\nimport { BehaviorSubject, interval } from 'rxjs';\r\nimport { LessonNumberPipe } from '../pipes/lesson-number.pipe';\r\nimport { ApiService } from './api.service';\r\nimport { NowTimeService } from './now-time.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScheduleService {\r\n\r\n  public readonly selectedLesson = new BehaviorSubject<FullLesson | null>(null);\r\n\r\n  constructor(\r\n    private readonly targets: TargetsService,\r\n    private readonly pipe: LessonNumberPipe,\r\n    private readonly nowTime: NowTimeService,\r\n  ) {\r\n    targets.targetsObservable.pipe(\r\n      filter(ts => !ts || this.selectedLesson.value && !ts.map(t => t.group).includes(this.selectedLesson.value.group) || false)\r\n    ).subscribe(() => this.selectedLesson.next(null));\r\n  }\r\n\r\n  public readonly combinedSchedule = this.targets.targetsObservable.pipe(\r\n    map(targets => targets || []),\r\n    switchMap(targets => Promise.all(targets.map(t => t.schedulePromise))),\r\n    map(this.flattenSchdeule.bind(this)),\r\n    map(lessons => lessons.map(\r\n      l => ({ ...l, name: l.name && l.name.replace('САМ РАБ', '').replace(/С\\/?Р/, '').replace('Самостоятельная работа', '') } as FullLesson)\r\n    )),\r\n    map(this.combineSchedules),\r\n    map(schedule => schedule && _.orderBy(schedule, s => s.weekName !== this.nowTime.currentWeek.weekName)),\r\n  );\r\n\r\n  private flattenSchdeule(schedules: GroupSchedule[]) {\r\n\r\n    const materialColors = [\r\n      '#16D1FF55',\r\n      '#B388FF55',\r\n      '#536DFE55',\r\n      '#64FFDA55',\r\n      '#DAF7A655',\r\n      '#CC1CFF55',\r\n      '#FFC30055',\r\n      '#B388FF55',\r\n      '#536DFE55',\r\n      '#64FFDA55',\r\n      '#16D1FF55',\r\n      '#CC1CFF55',\r\n      '#B388FF55',\r\n      '#536DFE55',\r\n      '#64FFDA55',\r\n      '#DAF7A655',\r\n      '#FFC30055',\r\n      '#B388FF55',\r\n      '#536DFE55',\r\n      '#64FFDA55',\r\n    ];\r\n\r\n    const flatLessons: FullLesson[] = _.flattenDeep(\r\n      schedules.map(({ name: group, days, }, i) => days.map(({ name: day, numerator, denominator }) => [\r\n        ...numerator.map(l => ({\r\n          ...l, group, day, week: 'числитель', color: materialColors[i],\r\n          lessonNumber: this.pipe.transform(l.timeRange)\r\n        } as FullLesson)),\r\n        ...denominator.map(l => ({\r\n          ...l, group, day, week: 'знаменатель', color: materialColors[i],\r\n          lessonNumber: this.pipe.transform(l.timeRange)\r\n        } as FullLesson)),\r\n      ]))\r\n    );\r\n    return flatLessons;\r\n  }\r\n\r\n  private combineSchedules(flatLessons: FullLesson[]) {\r\n\r\n    const schedule = Object.entries(_.groupBy(flatLessons, l => l.week)).map(([weekName, lessonsOfWeek]) => ({\r\n      weekName,\r\n      days: Object.entries(_.groupBy(lessonsOfWeek, l => l.day)).map(([dayName, lessonsOfDay]) => ({\r\n        dayName,\r\n        timeSlots: Object.entries(_.groupBy(lessonsOfDay, l => l.timeRange)).map(([timeRange, lessonsOfSlot]) => ({\r\n          timeRange,\r\n          groupsLessons: lessonsOfSlot\r\n        } as ScheduleTimeSlot)),\r\n      } as CombinedDaySchedule)),\r\n    } as CombinedWeekSchedule));\r\n\r\n    return schedule.length ? schedule : null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, of, merge, BehaviorSubject } from 'rxjs';\r\nimport { normalizeText } from '../utils/normalize-query';\r\nimport { map, mergeMap, filter, combineLatest, catchError, tap, startWith } from 'rxjs/operators';\r\nimport { combineLatest as combineLatestStatic } from 'rxjs';\r\nimport { GroupsService } from './groups.service';\r\nimport { TargetsService } from './targets.service';\r\nimport { ApiService } from './api.service';\r\nimport _ from 'lodash';\r\nimport { Student } from '../models/student';\r\nimport { compareStudents } from '../utils/compare-students';\r\nimport { SessionService } from './session.service';\r\nimport { HistoryService } from './history.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  public readonly query = new BehaviorSubject<string>('');\r\n\r\n  // private change = merge(this.query, this.targets.targetsObservable);\r\n\r\n  public readonly searchedGroups = this.query.pipe(\r\n    map(normalizeText),\r\n    map(q => ([...this.groupsService.names].filter(g => g.includes(q)))),\r\n    combineLatest(this.targets.targetsObservable), // TODO: Check this\r\n    map(([groups, targets]) => groups.filter(g => !targets || !targets.map(t => t.group).includes(g))),\r\n    map(groups => _.orderBy(groups, group => this.history.history.get(group) || 0, 'desc')),\r\n  );\r\n\r\n  public readonly groups = this.searchedGroups.pipe(\r\n    map(groups => groups.length ? groups : null),\r\n  );\r\n\r\n  public readonly groupsCount = this.searchedGroups.pipe(\r\n    map(groups => groups.length),\r\n  );\r\n\r\n  // TODO: Handle update on targets\r\n  public readonly students = this.query.pipe(\r\n    map(normalizeText),\r\n    mergeMap(q => !q ? of<Student[]>([]) : this.api.searchStudents(q, 8, this.session.guid)),\r\n    combineLatest(this.targets.targetsStudents.pipe(startWith([]))),\r\n    map(([students, targetedStudents]) => students.filter(s => !_.find(targetedStudents || [], ts => compareStudents(s, ts)))),\r\n    // TODO: mark as noSchedule.\r\n    map(students => students.filter(s => this.groupsService.names.has(s.group))),\r\n    catchError(() => of<Student[]>([])),\r\n    map(students => students.length ? students : null),\r\n  );\r\n\r\n  public results = combineLatestStatic(this.groups, this.students).pipe(\r\n    map(([groups, students]) => ({ groups, students })),\r\n  );\r\n\r\n  constructor(\r\n    private readonly groupsService: GroupsService,\r\n    private readonly api: ApiService,\r\n    private readonly targets: TargetsService,\r\n    private readonly history: HistoryService,\r\n    private readonly session: SessionService,\r\n  ) { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { createGuid } from '../utils/create-guid';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n\r\n  public readonly guid: string;\r\n  public readonly startTimeMs: number;\r\n\r\n  constructor() {\r\n    let guid = localStorage.getItem('sessionId');\r\n    if (!guid) {\r\n      guid = createGuid();\r\n      localStorage.setItem('sessionId', guid);\r\n    }\r\n    this.guid = guid;\r\n\r\n    let milliseconds: string | number | null = localStorage.getItem('sessionMs');\r\n    if (!milliseconds) {\r\n      milliseconds = new Date().getTime();\r\n      localStorage.setItem('sessionMs', milliseconds.toString());\r\n    }\r\n    this.startTimeMs = +milliseconds;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { StoredTarget, Target } from '../models/target';\r\nimport { ApiService } from './api.service';\r\nimport { GroupSchedule } from '../models/schedule-models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageService {\r\n\r\n  constructor(\r\n    private readonly api: ApiService,\r\n  ) { }\r\n\r\n  private readonly targetsKey = 'touch:targets';\r\n  private readonly groupsKey = 'touch:groups';\r\n  private readonly userKey = 'touch:user';\r\n  private readonly themeKey = 'touch:theme';\r\n  private readonly historyKey = 'touch:history';\r\n\r\n  private set<T>(key: string, obj: T) {\r\n    const stringified = JSON.stringify(obj);\r\n    localStorage.setItem(key, stringified);\r\n  }\r\n\r\n  private get<T>(key: string) {\r\n    const stringified = localStorage.getItem(key);\r\n    return stringified && JSON.parse(stringified) as T || null;\r\n  }\r\n\r\n  public getTargets() {\r\n    return this.get<StoredTarget[]>(this.targetsKey);\r\n  }\r\n\r\n  public setTargets(targets: Target[]) {\r\n    const storingTargets: StoredTarget[] = targets.map(({ group, students, color }) => ({ group, students, color }));\r\n    this.set(this.targetsKey, storingTargets);\r\n  }\r\n\r\n  public setGroups(groups: string[]) {\r\n    this.set(this.groupsKey, groups);\r\n  }\r\n\r\n  public getGroups() {\r\n    return this.get<string[]>(this.groupsKey);\r\n  }\r\n\r\n  public setHistory(history: Map<string, number>) {\r\n    const pairs = [...history.entries()];\r\n    this.set(this.historyKey, pairs);\r\n  }\r\n\r\n  public getHistory() {\r\n    const pairs = this.get<Array<[string, number]>>(this.historyKey) || [];\r\n    return new Map(pairs);\r\n  }\r\n\r\n  public setUser(userInfo: any) {\r\n    this.set(this.userKey, userInfo);\r\n  }\r\n\r\n  public getUser() {\r\n    return this.get(this.userKey);\r\n  }\r\n\r\n  public setTheme(isDark: boolean) {\r\n    return this.set(this.themeKey, isDark);\r\n  }\r\n\r\n  public getTheme() {\r\n    return this.get(this.themeKey);\r\n  }\r\n\r\n  public setGroupSchedule(schedule: GroupSchedule) {\r\n    const key = `touch:group:${schedule.name}`;\r\n    return this.set(key, schedule);\r\n  }\r\n\r\n  public getGroupSchedule(group: string) {\r\n    const key = `touch:group:${group}`;\r\n    return this.get<GroupSchedule>(key);\r\n  }\r\n\r\n  public hasGroupSchedule(group: string) {\r\n    const key = `touch:group:${group}`;\r\n    return localStorage.getItem(key) != null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, of, timer } from 'rxjs';\r\nimport { Target } from '../models/target';\r\nimport { ApiService } from './api.service';\r\nimport _ from 'lodash';\r\nimport { map, retry, retryWhen, delayWhen } from 'rxjs/operators';\r\nimport { StorageService } from './storage.service';\r\nimport { Student } from '../models/student';\r\nimport { GroupSchedule } from '../models/schedule-models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TargetsService {\r\n\r\n  constructor(\r\n    private readonly api: ApiService,\r\n    private readonly storage: StorageService,\r\n  ) {\r\n    if (location.search) {\r\n      return;\r\n    }\r\n    const targets = this.storage.getTargets();\r\n    if (!targets) {\r\n      return;\r\n    }\r\n    setTimeout(() => { // Чтобы успел подписаться метод обработки параметров роута\r\n      for (const target of targets) {\r\n        this.addGroup(target.group, target.students);\r\n      }\r\n    });\r\n  }\r\n\r\n  private targets: Target[] = [];\r\n\r\n  private readonly targetsSubject = new BehaviorSubject<Target[]>(this.targets);\r\n\r\n  public readonly targetsObservable = this.targetsSubject.asObservable().pipe(\r\n    map(targets => targets.length ? targets : null),\r\n  );\r\n\r\n  public readonly targetsStudents = this.targetsSubject.asObservable().pipe(\r\n    map(targets => _.flatten(targets.map(t => t.students || []))),\r\n    map(students => students.length ? students : null),\r\n  );\r\n\r\n  public addStudent(student: Student) {\r\n    // TODO: Implement as needed\r\n    const target = this.targetsSubject.value.find(t => t.group === student.group);\r\n    if (target) {\r\n      if (!target.students) {\r\n        target.students = [student];\r\n      } else {\r\n        target.students.push(student);\r\n      }\r\n      this.targetsSubject.next(this.targets);\r\n      this.storage.setTargets(this.targets);\r\n    } else {\r\n      this.addGroup(student.group, [student]);\r\n    }\r\n  }\r\n\r\n  public addGroup(group: string, students?: Student[]) {\r\n    const existedTarget = this.targets.find(t => t.group === group);\r\n    if (existedTarget) {\r\n      return existedTarget;\r\n    }\r\n\r\n    const cahcedSchedule = this.storage.getGroupSchedule(group);\r\n    const apiSchedule = this.api.getSchedule(group).pipe(\r\n      retryWhen(errors => errors.pipe(\r\n        delayWhen(() => timer(10000))\r\n      )),\r\n    ).toPromise() as Promise<GroupSchedule>;\r\n\r\n    const schedulePromise = cahcedSchedule\r\n      && of(cahcedSchedule).toPromise()\r\n      || apiSchedule;\r\n\r\n\r\n    if (!cahcedSchedule) {\r\n      schedulePromise.then(schedule => this.storage.setGroupSchedule(schedule));\r\n    } else {\r\n      apiSchedule.then(schedule => this.storage.setGroupSchedule(schedule));\r\n    }\r\n\r\n    const target: Target = {\r\n      group,\r\n      color: '#000000dd',\r\n      schedulePromise,\r\n      scheduleLoaded: false,\r\n      students\r\n    };\r\n\r\n    schedulePromise.then((d) => {\r\n      target.scheduleLoaded = true;\r\n    });\r\n\r\n    this.targets.push(target);\r\n    this.targetsSubject.next(this.targets);\r\n    this.storage.setTargets(this.targets);\r\n\r\n    return target;\r\n  }\r\n\r\n  public removeGroup(group: string) {\r\n    const target = this.targets.find(t => t.group === group);\r\n    _.remove(this.targets, target);\r\n    this.targetsSubject.next(this.targets);\r\n    this.storage.setTargets(this.targets);\r\n    return target;\r\n  }\r\n\r\n  public clear() {\r\n    this.targets = [];\r\n    this.targetsSubject.next(this.targets);\r\n    this.storage.setTargets(this.targets);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { StorageService } from './storage.service';\r\n\r\ntype ThemeType = 'light' | 'dark';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n\r\n  private readonly html = document.getElementsByTagName('html').item(0)!;\r\n\r\n  private _isDark = false;\r\n\r\n  public get isDark() {\r\n    return this._isDark;\r\n  }\r\n  public set isDark(v: boolean) {\r\n    this._isDark = v;\r\n    this.html.className = this._isDark ? 'sdal-dark' : 'sdal-light';\r\n    this.storage.setTheme(this.isDark);\r\n  }\r\n\r\n\r\n  constructor(\r\n    private readonly storage: StorageService\r\n  ) {\r\n    const isDark = storage.getTheme();\r\n\r\n    if (typeof isDark === 'boolean') {\r\n      this.isDark = isDark;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Student } from '../models/student';\r\n\r\nexport function compareStudents(student1: Student, student2: Student) {\r\n    return student1.name === student2.name\r\n        && student1.group === student2.group\r\n        && student1.vk_id === student2.vk_id;\r\n}\r\n","export function createGuid() {\r\n    const u = Date.now().toString(16) + Math.random().toString(16) + '0'.repeat(16);\r\n    const guid = [u.substr(0, 8), u.substr(8, 4), '4000-8' + u.substr(13, 3), u.substr(16, 12)].join('-');\r\n    return guid;\r\n}\r\n","const days = {\r\n    1: 'пн',\r\n    2: 'вт',\r\n    3: 'ср',\r\n    4: 'чт',\r\n    5: 'пт',\r\n    6: 'сб',\r\n    7: 'вс',\r\n};\r\n\r\nexport type DayNumber = 1 | 2 | 3 | 4 | 5 | 6 | 7;\r\n\r\nexport function getDayFromNuber(dayNumber: DayNumber) {\r\n    return days[dayNumber];\r\n}\r\n","const campuses = {\r\n    л: 'УЛК',\r\n    ю: 'ГЗ',\r\n    э: 'Энерго',\r\n    м: 'Машиностроение',\r\n    // : 'Машиностроение',\r\n} as any;\r\n\r\nexport function getCampus(classroom: string): string | null {\r\n    const normalized = classroom.toLowerCase();\r\n\r\n    if (classroom.includes('каф')) {\r\n        return null;\r\n    }\r\n\r\n    let letter = normalized.replace(/.*\\d+/, '');\r\n\r\n    if (campuses.hasOwnProperty(letter)) {\r\n        letter = campuses[letter];\r\n    }\r\n\r\n    return letter;\r\n}\r\n","export function enumerate(...terms: string[]): string {\r\n    if (terms.length === 1) {\r\n        return terms[0];\r\n    }\r\n\r\n    const [last, ...rest] = terms.reverse();\r\n    return rest.join(', ') + ` и ${last}`;\r\n}\r\n","const map = {\r\n    q: 'й',\r\n    w: 'ц',\r\n    e: 'у',\r\n    r: 'к',\r\n    t: 'е',\r\n    y: 'н',\r\n    u: 'г',\r\n    i: 'ш',\r\n    o: 'щ',\r\n    p: 'з',\r\n    '[': 'х',\r\n    ']': 'ъ',\r\n    a: 'ф',\r\n    s: 'ы',\r\n    d: 'в',\r\n    f: 'а',\r\n    g: 'п',\r\n    h: 'р',\r\n    j: 'о',\r\n    k: 'л',\r\n    l: 'д',\r\n    ';': 'ж',\r\n    '\\'': 'э',\r\n    z: 'я',\r\n    x: 'ч',\r\n    c: 'с',\r\n    v: 'м',\r\n    b: 'и',\r\n    n: 'т',\r\n    m: 'ь',\r\n    ',': 'б',\r\n    '.': 'ю',\r\n    '/': '.',\r\n};\r\n\r\nexport function normalizeText(query: string) {\r\n    const lower = query.toLowerCase();\r\n    let ruLayout = lower;\r\n    for (const letter in map) {\r\n        if (map.hasOwnProperty(letter)) {\r\n            ruLayout = ruLayout.split(letter).join((map as any)[letter]);\r\n        }\r\n    }\r\n    const singleSpaced = ruLayout.split(/\\s+/).join(' ');\r\n    return singleSpaced.toUpperCase();\r\n}\r\n","export function randomElement<T>(array: T[]) {\r\n    return array[Math.floor(Math.random() * array.length)];\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // backendOrigin: 'http://95.216.188.201:3000',\r\n  // backendOrigin: 'http://78.107.233.19:3000',\r\n  // backendOrigin: 'http://localhost:3000',\r\n  // backendOrigin: 'http://sergsol.sdal.pw:3000',\r\n  backendOrigin: '',\r\n  vkAppId: 7178114,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\nif ('serviceWorker' in navigator && environment.production) {\r\n  navigator.serviceWorker.register('./ngsw-worker.js');\r\n}\r\n"]}